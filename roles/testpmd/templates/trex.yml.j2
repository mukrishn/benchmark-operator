kind: Job
apiVersion: batch/v1
metadata:
  name: "trex-pod-{{ trunc_uuid }}"
  namespace: "{{ operator_namespace }}"
spec:
  template:
    metadata:
      labels:
        app: "trex-pod-{{ trunc_uuid }}"
      annotations:
        k8s.v1.cni.cncf.io/networks: '[
{% for network in workload_args.networks.trex %}
{% set outer_loop = loop %}
{% for count in range(network.count) %}
          {
            "name": "{{ network.name }}",
{% if network.mac|default([])|length == network.count %}
            "mac": "{{ network.mac[loop.index - 1] }}",
{% else %}        
            "mac": "{{ maclist_trex[loop.index - 1] }}",
{% endif %}
            "namespace": "{{ operator_namespace }}"
          }{% if loop.index < network.count or outer_loop.index < network_name_list|length %},{% endif %}
{% endfor %}
{% endfor %}
        ]'
    spec:
{% if workload_args.pin is sameas true %}
      nodeSelector:
        kubernetes.io/hostname: '{{ workload_args.pin_trex }}'
{% endif %}
      containers:
      - name: trex
        command: ["/bin/sh"]
        args:
        - "-c"
        - "sleep 3600"
        image: "{{ workload_args.image_trex | default('quay.io/mukrishn/trex:latest') }}"
        imagePullPolicy: "{{ workload_args.image_pull_policy | default('Always') }}"
        securityContext:
{% if workload_args.privileged %}
          privileged: true
{% else %}
          capabilities:
            add: ["IPC_LOCK", "NET_ADMIN"]
{% endif %}
        resources:
          limits:
            hugepages-1Gi: {{ workload_args.pod_hugepage_1gb_count | default('4Gi') }}
            memory: {{ workload_args.pod_memory | default('1000Mi') }}
            cpu: {{ workload_args.pod_cpu | default(6) }}
{% for key, value in network_resources.items() %}
            {{ key }}: {{ value }}
{% endfor %}
          requests:
            hugepages-1Gi: {{ workload_args.pod_hugepage_1gb_count | default('4Gi') }}
            memory: {{ workload_args.pod_memory | default('1000Mi') }}
            cpu: {{ workload_args.pod_cpu | default(6) }}
{% for key, value in network_resources.items() %}
            {{ key }}: {{ value }}
{% endfor %}
        volumeMounts:
        - name: hugepage
          mountPath: /dev/hugepages
        env:
        - name: NETWORK_NAME_LIST
          value: "{{ network_resources.keys()|list|join(',') }}"
        - name: SOURCE_MAC_LIST
          value: "{{ maclist_trex|list|join(',') }}"
        - name: DEST_MAC_LIST
          value: "{{ maclist_testpmd|list|join(',') }}"                    
{% if workload_args.environments is defined %}
{% for key, value in workload_args.environments.items() %}
        - name: {{ key }}
          value: "{{ value }}"
{% endfor %}
{% endif %}
      volumes:
      - name: hugepage
        emptyDir:
          medium: HugePages
      restartPolicy: OnFailure
      serviceAccountName: benchmark-operator
{% include "metadata.yml.j2" %}

